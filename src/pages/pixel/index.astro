---
import PageLayout from "@layouts/PageLayout.astro"
import TopLayout from "@layouts/TopLayout.astro"
import BottomLayout from "@layouts/BottomLayout.astro"
import { WORK } from "@consts"

---

<PageLayout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <TopLayout>
  </TopLayout>
  
  <BottomLayout>
    <div class="flex flex-col gap-4 -z-10 opacity-90">
      <div class="contenedor mx-auto">
        <div class="flex justify-around mx-auto">
            <img src="logo-rpg.png" alt="" width="90px">
            <h1 class="text-center text-white text-xl font-bold p-2">
                Necesitas ayuda ?
            </h1>
            <svg xmlns="http://www.w3.org/2000/svg" class="typing icon icon-tabler icon-tabler-message-chatbot" width="44" height="44" viewBox="0 0 24 24" stroke-width="2" stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
                <path d="M18 4a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-5l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12z" />
                <path d="M9.5 9h.01" />
                <path d="M14.5 9h.01" />
                <path d="M9.5 13a3.5 3.5 0 0 0 5 0" />
            </svg>
        </div>
        <form class="chat-container p-2">
            <section class="chat-box">
                <div id="preg" class="message sent text-black"></div>
                <div id="loading" class="message text-black"></div>
                <div id="resp" class="message received text-black"></div>  
            </section>
            <div>
                <input 
                type="text" 
                id="pregunta" 
                placeholder="Consulta aquí tus dudas técnicas" 
                class="flex w-full font-bold p-2 mt-4 rounded-3xl bg-white text-black">
                <button 
                id="boton" 
                type="submit"
                class="flex justify-center text-[#09f] font-bold bg-white p-2 rounded-3xl mt-4 mx-auto hover:text-green-600 active:translate-y-1"
                >
                Enviar
                </button>
            </div>
        </form>
    </div>
    </div>

      <div class="top-0 fixed -z-20 opacity-15 justify-center w-screen">
        <img src="auditorio.webp" alt="">
      </div>
    </div>
  </BottomLayout>
</PageLayout>

<script lang="javascript">
const resol = document.querySelector('#resp')
const preg = document.querySelector('#preg')
const loading = document.querySelector('#loading')
const pregunta = document.querySelector('#pregunta');
const boton = document.querySelector('#boton')
let prompt = {}
let question = ''
//let message = []
let url;


boton.addEventListener('click', (event) => {
    event.preventDefault();
    if(resol) resol.innerHTML = ''
    const p = String(pregunta.value)
    if(p.length < 1) return
    resol.value = ''
    question = p
    preg.innerHTML = question 
    pregunta.value = ''
    prompt = {prompt: p}
    //message.push(prompt)
    loading.innerHTML = 'Un momento....'
    url = 'https://jaweb.es:3000/api/gpt?prompt=' + p
    Nuevo(prompt)
})


const respuesta = (resp) => {
    loading.innerHTML = ''
    //preg.innerHTML = question + ' ' + '?'
    if(resp.message){
        resol.innerHTML = resp.message;
    } else {
        resol.innerHTML = 'Lamentamos no poder responder en este momento, pruebe en unos minutos.'
    }

}

const inicio = () => {
    resol.innerHTML = '¡Hola! Soy Pixel, el asistente virtual de RPG. ¿En qué puedo ayudarte hoy?'
}

async function Nuevo (prompt){
    const data = await fetch( url, 
        {   method: 'POST',
            mode: 'cors',
            headers: {'Content-Type': 'application/json'}, 
            body: JSON.stringify( prompt ) 
        })
    const resp = await data.json()
    respuesta(resp)
}

inicio()
</script>
<style>
  .contenedor { 
    width: 400px; /* Ancho del chat */
    background-color: #09f; /* Color de fondo del chat */
    border: 2px solid #ccc; /* Borde del chat */
    border-radius: 10px; /* Borde redondeado */
    box-shadow: 0 0 10px rgba(180, 14, 33, 0.1); /* Sombra */
  }

.chat-container {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 400px;
    height: 60vh;
    margin: 10px auto;
  }
  
  .chat-box {
    background-color: #f2f2f2;
    padding: 10px;
    border-radius: 10px;
    overflow: auto;
  }
  
  .message {
    margin: 5px 0;
    padding: 8px 12px;
    border-radius: 10px;
    max-width: 80%;
  }
  
  .received {
    background-color: #d4e1f4;
  }
  
  .sent {
    background-color: #b7e0d2;
    align-self: flex-end;
  }
  
  .typing {
    background-color: #09f;
    border-radius: 5px;
    animation: typing-animation 1.5s infinite;
  }
  
  @keyframes typing-animation {
    0% { opacity: 0.2; }
    50% { opacity: 0.5; }
    100% { opacity: 1; }
  }
</style>
